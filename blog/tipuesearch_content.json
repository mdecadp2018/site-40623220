{"pages":[{"title":"About","text":"2018 Fall 分組網誌 課程倉儲: https://github.com/mdecadp2018/site-40623220 課程投影片: https://mdecadp2018.github.io/site-40623220/reveal 課程網誌: https://mdecadp2018.github.io/site-40623220/blog/","tags":"misc","url":"https://mdecadp2018.github.io/site-40623220/blog/pages/about/"},{"title":"2018 Fall 第八週","text":"2018 Fall 課程內容 學習要點5 1.An introduction to engineering drawings(工程圖紙簡介) 2.Creating drawing views, dimensioning, tolerancing, notes(創建圖紙視圖，尺寸標註，公差，筆記) 3.Using formats/templates(使用格式/模板) Introducing GTOL/GD&T(介紹GTOL / GD＆T)","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623220/blog/2018-Fall-W8.html"},{"title":"2018 Fall 第七週","text":"2018 Fall 課程內容 學習要點4 1.Lesson on degrees of freedom(關於自由度的課程) 2.An introduction to assembly Mates(裝配的介紹) 3.Mate Connectors(連接器) 4.Manipulating part position with the triad(三合一操縱零件位置) 5.Explaining Mates and Relations(配合的關係) 6.Animating Mates(動畫配合) 7.An introduction to Linked Documents(關聯文件的介紹) 8.Applying limits to a Mate(對配合應用的限制) Assembly and Mate Connector(裝配和配合連接器) For designing and manufacturing an assembly, it is important to know which parts go into the assembly, how many of each, how they are assembled, and how they should perform. A Mate in Onshape fully describes how two parts will interact with each other by specifically controlling each degree of freedom through the use of things called Mate Connectors. You can think of a Mate Connector as a small, local coordinate system (an x, y, and z axis) for a joint between two parts. The Red line is the X-axis, the Green is the Y, and the Blue is the Z. 為了設計和製造組件，重要的是要知道哪些部件進入組件，每個部件中有多少，它們如 何組裝以及它們應該如何執行。Onshape中的配合通過使用稱為配合連接器的東西，通 過專門控制每個自由度來充分描述兩個部分如何相互作用。您可以將Mate連接器視為兩 個部件之間的連接的小型局部坐標系（x，y和z軸）。紅線是X軸，綠色是Y，藍色是Z Animations(動畫) Animations are a great way to view the motion of your Mate before accepting it. Onshape will automatically move the Mate in a way that will exercise the Degrees of Freedom. In a Revolute Mate the part will rotate, in a Slider Mate, the part will slide, in a Cylinder Mate, the part will slide and rotate, etc. 在接受動畫之前，動畫是查看伴侶動作的絕佳方式。 Onshape將以一種行使自由度的方 式自動配合移動。在Revolute Mate中，零件將旋轉，在Slider Mate中，零件將滑動， 在Cylinder Mate中，零件將滑動並旋轉等。 Relations and Limits(關係和限制) A relation is a way in Onshape to constrain degrees of freedom between two Mates. Where a Mate controls how many degrees of freedom a pair of parts has between them, a Relation can control how those degrees of freedom move with respect to each other. There are 4 types of Relations in Onshape: Gear, Rack and Pinion, Screw, and Linear. These relations rely on preexisting Mates to define the type of motion that will occur between two parts. 關係是在Onshape中限制兩個配合之間自由度的一種方式。在Mate控制一對部件之間有多少自由度的情況下，一個關係可以控制這些自由度相對於彼此的移動方式。在Onshape中有4種類型的關係：齒輪，齒條和小齒輪，螺釘和線性。這些關係依賴於預先存在的配合來定義將在兩個部分之間發生的運動類型。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623220/blog/2018-Fall-W7.html"},{"title":"2018 Fall 第六週","text":"2018 Fall 課程內容 學習要點 1.Using Boolean operations (布爾運算) Applying linear and circular patterning (應 用線性和圓形圖案) 2.Applying mirror tool(應用鏡像工具) Assemblies in Onshape(Onshape中的裝配) An introduction to concurrent top-down and bottom-up designs (由上而下和由下而上設計簡介) 3.Creating a Multi-Part design in a Part Studio(在Part Studio中創建多部件設計) 4Multi-Part Modeling(多部分建模) Unlike other CAD systems, you may make as many parts in a single Part Studio as you want. This technique is called Multi-Part Modeling and it's very powerful because, as we've seen, you can make parts that highly depend on one another. 與其他CAD系統不同，您可以根據需要在單個Part Studio中創建任意數量的零件。 這種技術稱為多部件建模，它非常強大，因為正如我們所見，您可以製造高度依賴 彼此的部件。 Buttom-Up Design(Buttom-Up設計) Bottom-Up Design is when a product is designed by creating sketches, then features, then parts (often one per Part Studio), and then assemblies. In this approach, the geometry is created starting with the lower level entities (like 2D lines and circles) up the hierarchy to the highest level assembly (such as the final product being built). 由下而上設計是指通過創建草圖，然後是要素，然後是零件（通常每個零件工作室一個）， 然後是裝配體來設計產品。在此方法中，幾何體從較低級別的實體（如2D線和圓圈）開始 創建，從層次結構向上到最高級別的程序集（例如正在構建的最終產品）。 Top-Down Design(由上而下的設計) Top-Down Design is when the shape of an overall product is sketched first, and then different regions of that sketch are used to create the lower level parts and their features. Top-Down is a more intuitive way to approach a design because typically we, as designers, envision the final product first, then as time goes on, we refine the concept into finer and finer detail. 由上而下設計是指首先繪製整個產品的形狀，然後使用該草圖的不同區域來創建較低級別的部件及其特徵。由上而下是一種更直觀的設計方法，因為通常我們作為設計師首先設想最終產品，然後隨著時間的推移，我們將概念細化為更精細和更精細的細節。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623220/blog/2018-Fall-W6.html"},{"title":"2018 Fall 第五週","text":"2018 Fall 課程內容 Onshape練習 學習要點 1.簡介\"設計意圖\" (design intent) 2.設定尺寸 (dimensions) 與約束 (constraints) 3.自動推理 (automatic inferencing) 4.繪製精確的零件 (accurate part) 5.草圖繪製練習 6.運用與建立平面 (planes) 7.建立圓角 (fillets) 與倒角 (chamfers) 8.使用多個 (multiple) 草圖區域 (sketch regions) 9.基本零件 10繪製時鐘模型 - 用於設計意圖教學 11.各種簡單的幾何形狀 (geometric shapes) Design Intent is the practice of developing your project's objectives and requirements even before working on your design. 設計意圖指在設計進行前, 必須完成之專案目的與需求確認 The more complex the geometry, the more we need to think about how we want to design the parts before just going ahead and making it. 幾何外型越複雜, 越需要在零件設計之前做好設計意圖的確認","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623220/blog/2018-Fall-W5.html"},{"title":"2018 Fall 第四週","text":"2018 Fall 課程內容 Onshape練習 學習要點 1.建立 Onshape 帳號 - 請利用學校 gmail 建立教育版帳號 2.3D 環境導航 (navigate) 3.說明基於草圖 (sketch-based)的建模 4.介紹 4 個基本特徵 (features)（擠出(extrude)，旋轉(revolve)，掃描(sweep)，和斷面混成(loaf)） 5.從 2D 過渡到 3D 6.介紹基本草圖 7.附錄A：鍵盤快捷鍵 (keyboard shotcuts)，滑鼠和觸控平面手勢 (touchpad gestures)，檢視工具 8.附錄B：導航說明檔，建立帳號，訂閱計劃 (subscription plans) 9.圓柱薄殼 (cylinder shell) - 繪圖界面與可視化/檢視的介紹 10.針對既有草圖的模型 - 接續建立特徵 11.現存公用模型 (public models) - 如何搜尋並復製到工作區 (workspace)","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623220/blog/2018-Fall-W4.html"},{"title":"2018 Fall 第三週","text":"2018 Fall 課程內容 中秋放假","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623220/blog/2018-Fall-W3.html"},{"title":"2018 Fall 第二週","text":"2018 Fall 課程內容 1.登入Github後到https://classroom.github.com/a/fGqXU9kO 領取其中作業 2.將倉儲的branches改為gh-pages 3.申請Onshape帳號後開始練習 4.sharex的操作","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623220/blog/2018-Fall-W2.html"},{"title":"2018 Fall 分組網誌","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. 課程倉儲 利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處: 第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 cp github 倉儲 外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料. 第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 cp 課程網站 伺服. 第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料. 該學習哪種程式語言? C/C++、Python、Lua 或 Javascript? 都可以. 在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623220/blog/2018-Fall-Project-Blog.html"},{"title":"2018 Fall 第一週","text":"2018 Fall 課程內容 登入自己的Github帳號後建立一個倉儲學號學號.github.io 1.利用git clone 將https://github.com/mdecourse/2018fall clone下來 2.利用git clone 將https://github.com/40623220/40623220.github.io clone下來 3.將2018fall中的資料全部拉到40623220.github.io中除了.git的檔案 4.使用git add .增加，再用git commit -m \"名稱\"提交，再用git push 推送 5.使用git config設定身分","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623220/blog/2018-Fall-W1.html"}]}